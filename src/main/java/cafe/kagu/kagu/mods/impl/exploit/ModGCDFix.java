package cafe.kagu.kagu.mods.impl.exploit;

import cafe.kagu.kagu.eventBus.EventHandler;
import cafe.kagu.kagu.eventBus.Handler;
import cafe.kagu.kagu.eventBus.impl.EventPacketSend;
import cafe.kagu.kagu.eventBus.impl.EventTick;
import cafe.kagu.kagu.mods.Module;
import cafe.kagu.kagu.utils.ChatUtils;
import net.minecraft.network.play.client.C03PacketPlayer;

public class ModGCDFix extends Module {

    public ModGCDFix() {
        super("GCDFix", Category.EXPLOIT);
    }

    private float[] lastRots = new float[2];
    private Object lastWorld = null;

    @Override
    public void onEnable() {
        lastRots = null;
    }

    @EventHandler
    private Handler<EventTick> onTick = evt -> {
      if (evt.isPost())
          return;
      if (lastWorld != mc.theWorld){
          lastWorld = mc.theWorld;
          lastRots = null;
          ChatUtils.addChatMessage("test");
      }
    };

    @EventHandler
    private Handler<EventPacketSend> onPacketSend = evt -> {
        if (evt.isPost() || !(evt.getPacket() instanceof C03PacketPlayer) || !((C03PacketPlayer)evt.getPacket()).isRotating())
            return;
        C03PacketPlayer c03 = (C03PacketPlayer) evt.getPacket();
        if (lastRots == null)
            lastRots = new float[]{c03.getYaw(), c03.getPitch()};
        float f = mc.gameSettings.mouseSensitivity * 0.6F + 0.2F;
        float f1 = f * f * f * 8.0F; // GCD
        double yawChange = lastRots[0] - c03.getYaw();
        c03.setYaw(lastRots[0] + ((c03.getYaw() - lastRots[0]) - ((c03.getYaw() - lastRots[0]) % f1)));
        c03.setPitch(lastRots[1] + ((c03.getPitch() - lastRots[1]) - ((c03.getPitch() - lastRots[1]) % f1)));
        lastRots[0] = c03.getYaw();
        lastRots[1] = c03.getPitch();
    };

}
